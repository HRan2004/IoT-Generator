{
  "type": "Program",
  "body": [
    {
      "type": "ForStatement",
      "init": {
        "type": "VariableDeclaration",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "i",
              "range": [
                8,
                9
              ]
            },
            "init": {
              "type": "Literal",
              "value": 0,
              "raw": "0",
              "range": [
                10,
                11
              ]
            },
            "range": [
              8,
              11
            ]
          }
        ],
        "kind": "let",
        "range": [
          4,
          12
        ]
      },
      "test": {
        "type": "BinaryExpression",
        "operator": "<",
        "left": {
          "type": "Identifier",
          "name": "i",
          "range": [
            12,
            13
          ]
        },
        "right": {
          "type": "Literal",
          "value": 3,
          "raw": "3",
          "range": [
            14,
            15
          ]
        },
        "range": [
          12,
          15
        ]
      },
      "update": {
        "type": "UpdateExpression",
        "operator": "++",
        "argument": {
          "type": "Identifier",
          "name": "i",
          "range": [
            16,
            17
          ]
        },
        "prefix": false,
        "range": [
          16,
          19
        ]
      },
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "PDxO",
                "range": [
                  24,
                  28
                ]
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "CONTROL",
                  "raw": "'CONTROL'",
                  "range": [
                    29,
                    38
                  ]
                },
                {
                  "type": "Literal",
                  "value": "B1",
                  "raw": "'B1'",
                  "range": [
                    40,
                    44
                  ]
                },
                {
                  "type": "Literal",
                  "value": 0,
                  "raw": "0",
                  "range": [
                    46,
                    47
                  ]
                }
              ],
              "range": [
                24,
                48
              ]
            },
            "range": [
              24,
              48
            ]
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "sleep",
                "range": [
                  51,
                  56
                ]
              },
              "arguments": [
                {
                  "type": "BinaryExpression",
                  "operator": "*",
                  "left": {
                    "type": "Literal",
                    "value": 1,
                    "raw": "1",
                    "range": [
                      57,
                      58
                    ]
                  },
                  "right": {
                    "type": "Literal",
                    "value": 1000,
                    "raw": "1000",
                    "range": [
                      61,
                      65
                    ]
                  },
                  "range": [
                    57,
                    65
                  ]
                }
              ],
              "range": [
                51,
                66
              ]
            },
            "range": [
              51,
              66
            ]
          }
        ],
        "range": [
          20,
          68
        ]
      },
      "range": [
        0,
        68
      ]
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "aaa",
          "range": [
            69,
            72
          ]
        },
        "arguments": [],
        "range": [
          69,
          74
        ]
      },
      "range": [
        69,
        74
      ]
    }
  ],
  "sourceType": "script",
  "range": [
    0,
    74
  ]
}